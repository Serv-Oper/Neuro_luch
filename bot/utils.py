# utils.py ‚Äî –æ–±—â–∏–µ —É—Ç–∏–ª–∏—Ç—ã –∏ middleware –¥–ª—è Luch_Neuro

import logging
from datetime import date
from functools import wraps
from typing import Callable, Any, Awaitable, Tuple, Optional
from aiogram.types import CallbackQuery
from aiogram.types import File
from config import FREE_DAILY_LIMIT, BOT_TOKEN, SUPPORT_USERNAME
from db import SubscriptionStatus
from db import get_today_usage, increment_usage
from bot.keyboards import subscription_keyboard
import re
import html

logger = logging.getLogger(__name__)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# –£–±–∏—Ä–∞–µ–º –≤–µ–¥—É—â–∏–µ Markdown‚Äê–∑–∞–≥–æ–ª–æ–≤–∫–∏ (‚Äú#‚Äù, ‚Äú##‚Äù, ‚Ä¶) –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def strip_markdown_heads(text: str) -> str:
    """
    –£–±–∏—Ä–∞–µ—Ç –æ—Ç 1 –¥–æ 6 —Å–∏–º–≤–æ–ª–æ–≤ '#' –∏ –ª—é–±—ã–µ –ø—Ä–æ–±–µ–ª—ã –ø–æ—Å–ª–µ –Ω–∏—Ö
    –≤ –Ω–∞—á–∞–ª–µ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏.
    """
    return re.sub(r'(?m)^#{1,6}\s*', '', text)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# –†–∞–∑–±–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞ –∫—É—Å–∫–∏ –¥–ª–∏–Ω–æ–π ‚â§4096 —Å–∏–º–≤–æ–ª–æ–≤,
# —Å—Ç–∞—Ä–∞—è—Å—å –Ω–µ —Ä–∞–∑—Ä—ã–≤–∞—Ç—å —Å–ª–æ–≤–∞
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def chunk_text(text: str, max_len: int = 4096) -> list[str]:
    """
    –†–∞–∑–±–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –¥–ª–∏–Ω–æ–π ‚â§ max_len —Å–∏–º–≤–æ–ª–æ–≤.
    –°—Ç–∞—Ä–∞—Ç–µ–ª—å–Ω–æ —Ä–≤—ë—Ç –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –ø–µ—Ä–µ–≤–æ–¥—É —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –ø—Ä–æ–±–µ–ª—É –ø–µ—Ä–µ–¥ –≥—Ä–∞–Ω–∏—Ü–µ–π,
    —á—Ç–æ–±—ã –Ω–µ —Ä–∞–∑—Ä—ã–≤–∞—Ç—å —Å–ª–æ–≤–∞.
    """
    chunks: list[str] = []
    start = 0
    while start < len(text):
        end = min(start + max_len, len(text))
        if end < len(text):
            sep_n = text.rfind("\n", start, end)
            sep_s = text.rfind(" ", start, end)
            sep = max(sep_n, sep_s)
            if sep > start:
                end = sep
        chunks.append(text[start:end].rstrip())
        start = end
    return chunks


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def send_final_answer(
    message,
    raw_body: str,
    reply_markup=None
) -> None:
    """
    –®–ª—ë—Ç –≤ —á–∞—Ç –∏—Ç–æ–≥–æ–≤—ã–π —Ç–µ–∫—Å—Ç:
      0) –£–±–∏—Ä–∞–µ—Ç –≤–µ–¥—É—â–∏–µ '#' –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫
      1) –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç Markdown-–ø–æ–¥–æ–±–Ω—É—é —Ä–∞–∑–º–µ—Ç–∫—É –≤ HTML
      2) –†–∞–∑–±–∏–≤–∞–µ—Ç –Ω–∞ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã ‚â§4096 —Å–∏–º–≤–æ–ª–æ–≤
      3) –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–æ–ª—å–∫–æ –∫ –ø–µ—Ä–≤–æ–º—É —Ñ—Ä–∞–≥–º–µ–Ω—Ç—É
      4) –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç reply_markup —Ç–æ–ª—å–∫–æ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
    """
    # 0) —É–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–µ–¥—É—â–∏–µ ‚Äú#‚Äù –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫
    cleaned = strip_markdown_heads(raw_body)

    # 1) –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º
    formatted = format_html(cleaned)

    # 2) —Ä–∞–∑–±–∏–≤–∞–µ–º
    parts = chunk_text(formatted)

    # 3) —à–ª—ë–º
    header = "<b>–ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç:</b>\n"
    for idx, part in enumerate(parts):
        text = header + part if idx == 0 else part
        markup = reply_markup if (reply_markup and idx == len(parts) - 1) else None
        await message.answer(text, parse_mode="HTML", reply_markup=markup)

# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
#  –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ handlers.py
# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
class LimitExceededError(Exception):
    """–°–≤–æ–±–æ–¥–Ω—ã–π –ª–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω."""
    pass


class MissingChatError(Exception):
    """–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    pass


# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
#  –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ –∏ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç
# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
async def check_and_increment_usage(
    user_id: int,
    model_key: str,
    subscription_status: SubscriptionStatus
) -> None:
    """
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–µ–≤—ã—Å–∏–ª –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ª–∏–º–∏—Ç –ø–æ –º–æ–¥–µ–ª–∏,
    –∏ —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á—ë—Ç—á–∏–∫. –õ–∏–º–∏—Ç—ã:
      ‚Ä¢ Free: FREE_DAILY_LIMIT (–≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤–º–µ—Å—Ç–µ)
      ‚Ä¢ Premium:
          ‚Äì fast: 45
          ‚Äì smart, vision: 15
    """
    today = date.today()

    # 1) –í—ã—á–∏—Å–ª—è–µ–º –ª–∏–º–∏—Ç –ø–æ —Å—Ç–∞—Ç—É—Å—É –∏ –º–æ–¥–µ–ª–∏
    if subscription_status == SubscriptionStatus.FREE:
        limit = FREE_DAILY_LIMIT
    else:
        if model_key == "fast":
            limit = 45
        elif model_key in ("smart", "vision"):
            limit = 15
        else:
            # –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π ‚Äî —Ç–æ—Ç –∂–µ free-–ª–∏–º–∏—Ç
            limit = FREE_DAILY_LIMIT

    # 2) –°—á–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ —ç—Ç–æ–π –º–æ–¥–µ–ª–∏
    used = await get_today_usage(user_id, today, model_key=model_key)

    # 3) –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –±—Ä–æ—Å–∞–µ–º, –µ—Å–ª–∏ –∏—Å—á–µ—Ä–ø–∞–Ω–æ
    if used >= limit:
        raise LimitExceededError(
            f"üîí –í—ã –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ ({limit}) "
            f"–¥–ª—è –º–æ–¥–µ–ª–∏ ¬´{model_key}¬ª –∑–∞ —Å–µ–≥–æ–¥–Ω—è."
        )

    # 4) –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä—É–µ–º —Å—á—ë—Ç—á–∏–∫
    await increment_usage(user_id, today, model_key=model_key)


# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
#  –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —Ñ–∞–π–ª Telegram
# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
def build_telegram_file_url(file: File) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç File –æ—Ç Telegram –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä—è–º–æ–π URL
    –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É —á–µ—Ä–µ–∑ Bot API.
    """
    return f"https://api.telegram.org/file/bot{BOT_TOKEN}/{file.file_path}"


def format_html(raw: str) -> str:
    """
    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç Markdown-–ø–æ–¥–æ–±–Ω—É—é —Ä–∞–∑–º–µ—Ç—Ä–æ–≤–∫—É –≤ HTML –¥–ª—è Telegram, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è:
      ‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–∫–∏ —É—Ä–æ–≤–Ω—è 1‚Äì3 (#, ##, ###) ‚Üí <b>‚Ä¶</b>
      ‚Ä¢ –ñ–∏—Ä–Ω—ã–π+–∫—É—Ä—Å–∏–≤ (***‚Ä¶***), –∂–∏—Ä–Ω—ã–π (**‚Ä¶**) –∏ –∫—É—Ä—Å–∏–≤ (*‚Ä¶*)
      ‚Ä¢ –ü–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ (__‚Ä¶__) ‚Üí <u>‚Ä¶</u>
      ‚Ä¢ –ó–∞—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ (~~‚Ä¶~~) ‚Üí <s>‚Ä¶</s>
      ‚Ä¢ Inline-–∫–æ–¥ (`‚Ä¶`) ‚Üí <code>‚Ä¶</code>
      ‚Ä¢ –ë–ª–æ—á–Ω—ã–π –∫–æ–¥ (```‚Ä¶```) ‚Üí <pre>‚Ä¶</pre>
      ‚Ä¢ –°—Å—ã–ª–∫–∏ [text](https://‚Ä¶) ‚Üí <a href="‚Ä¶">text</a>
      ‚Ä¢ –¶–∏—Ç–∞—Ç—ã —Å—Ç—Ä–æ–∫ ("> ‚Ä¶") ‚Üí <i>‚Ä¶</i>
      ‚Ä¢ –ú–∞—Ä–∫–µ—Ä—ã —Å–ø–∏—Å–∫–æ–≤ ("- " –∏–ª–∏ "* ") ‚Üí ‚Ä¢
      ‚Ä¢ –ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ ("1. ") —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è
      ‚Ä¢ –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTML-—Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤
      ‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫
    """
    # 1) –°–Ω–∞—á–∞–ª–∞ HTML-escape –≤—Å–µ–≥–æ –≤—Ö–æ–¥–∞
    text = html.escape(raw)

    # 2) –ö–æ–¥-–±–ª–æ–∫–∏: ```‚Ä¶```  ‚Äî —Å —Ñ–ª–∞–≥–æ–º DOTALL —á–µ—Ä–µ–∑ (?s)
    text = re.sub(
        r'(?s)```(.+?)```',
        lambda m: f'<pre>{html.escape(m.group(1))}</pre>',
        text
    )

    # 3) Inline-–∫–æ–¥: `‚Ä¶`
    text = re.sub(
        r'`([^`\n]+?)`',
        lambda m: f'<code>{html.escape(m.group(1))}</code>',
        text
    )

    # 4) –°—Å—ã–ª–∫–∏ [text](https://...)
    text = re.sub(
        r'\[([^]]+)]\((https?://[^\s)]+)\)',
        r'<a href="\2">\1</a>',
        text
    )

    # 5) –ü–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ: __‚Ä¶__
    text = re.sub(r'__(.+?)__', r'<u>\1</u>', text)

    # 6) –ó–∞—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ: ~~‚Ä¶~~
    text = re.sub(r'~~(.+?)~~', r'<s>\1</s>', text)

    # 7) –ñ–∏—Ä–Ω—ã–π+–∫—É—Ä—Å–∏–≤, –∂–∏—Ä–Ω—ã–π, –∫—É—Ä—Å–∏–≤
    text = re.sub(r'\*\*\*(.+?)\*\*\*', r'<b><i>\1</i></b>', text)
    text = re.sub(r'\*\*(.+?)\*\*',   r'<b>\1</b>',     text)
    text = re.sub(r'\*(.+?)\*',       r'<i>\1</i>',     text)

    # 8) –ó–∞–≥–æ–ª–æ–≤–∫–∏ —É—Ä–æ–≤–Ω–µ–π 1‚Äì3: # ‚Ä¶, ## ‚Ä¶, ### ‚Ä¶
    #    –æ–±—ä–µ–¥–∏–Ω—è–µ–º –≤ –æ–¥–∏–Ω –ø–∞—Ç—Ç–µ—Ä–Ω: #{1,3}
    text = re.sub(r'(?m)^(#{1,3})\s*(.+)', r'<b>\2</b>', text)

    # 9) –¶–∏—Ç–∞—Ç—ã —Å—Ç—Ä–æ–∫: "> —Ç–µ–∫—Å—Ç"
    text = re.sub(r'(?m)^>\s*(.+)', r'<i>\1</i>', text)

    # 10) –ú–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏: "-", "*"
    text = re.sub(r'(?m)^[ \t]*[-*]\s+', '‚Ä¢ ', text)

    # 11) –ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –æ—Å—Ç–∞–≤–ª—è–µ–º: "1. ", "2. " –∏ —Ç.–¥. ‚Äî HTML-escape —É–∂–µ —Å–¥–µ–ª–∞–Ω

    # 12) –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø–æ–¥—Ä—è–¥ –∏–¥—É—â–∏–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ (–±–æ–ª–µ–µ 2 ‚Üí 2)
    text = re.sub(r'\n{3,}', '\n\n', text)

    return text

# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
#  –ü–∞—Ä—Å–µ—Ä callback_data –≤–∏–¥–∞ "action:param"
# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
def parse_callback(data: str) -> Tuple[str, Optional[str]]:
    """
    –†–∞–∑–±–∏–≤–∞–µ—Ç callback_data –ø–æ –ø–µ—Ä–≤–æ–º—É –¥–≤–æ–µ—Ç–æ—á–∏—é.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (action, param) –∏–ª–∏ (data, None).
    """
    if ":" in data:
        action, param = data.split(":", 1)
    else:
        action, param = data, None
    return action, param


# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
#  –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤, —á—Ç–æ–±—ã –ª–æ–≤–∏—Ç—å –Ω–∞—à–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
def handle_errors(
    func: Callable[..., Awaitable[Any]]
) -> Callable[..., Awaitable[Any]]:
    """
    –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä–∞—è:
      - –ª–æ–≤–∏—Ç LimitExceededError  ‚Üí —à–ª—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —é–∑–µ—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"
      - –ª–æ–≤–∏—Ç MissingChatError    ‚Üí —à–ª—ë—Ç –ø–æ–¥—Å–∫–∞–∑–∫—É —Å–æ–∑–¥–∞—Ç—å —á–∞—Ç
      - –ª–æ–≤–∏—Ç –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ ‚Üí –ª–æ–≥–∏—Ä—É–µ—Ç –∏ —à–ª—ë—Ç –æ–±—â–∏–π –∞–ª–µ—Ä—Ç
    """
    @wraps(func)
    async def wrapper(update: Any, *args, **kwargs):
        try:
            return await func(update, *args, **kwargs)
        except LimitExceededError as le:
            # –¥–ª—è CallbackQuery –æ—Ç–≤–µ—á–∞–µ–º –≤ —á–∞—Ç–µ, –∫—É–¥–∞ –ø—Ä–∏—à—ë–ª –≤—ã–∑–æ–≤
            if isinstance(update, CallbackQuery):
                target = update.message
                await update.answer()  # –∑–∞–∫—Ä—ã–≤–∞–µ–º loading
            else:
                target = update  # Message
            await target.answer(
                str(le),
                reply_markup=subscription_keyboard(False)
            )
        except MissingChatError as mc:
            from keyboards import main_menu_keyboard

            if isinstance(update, CallbackQuery):
                target = update.message
                await update.answer()
            else:
                target = update
            # –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await target.answer(
                str(mc),
                reply_markup=main_menu_keyboard()
            )
        except Exception as e:
            logger.exception("Unhandled error in handler %s: %s", func.__name__, e)
            if isinstance(update, CallbackQuery):
                target = update.message
                await update.answer()
            else:
                target = update
            await target.answer(
                f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. "
                f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ @{SUPPORT_USERNAME}."
            )
    return wrapper
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#  –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ callback ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç ¬´query is too old¬ª
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
from aiogram.exceptions import TelegramBadRequest


async def safe_answer(
    callback: CallbackQuery,
    *cb_args,
    **cb_kwargs
) -> None:
    """
    –¢–∏—Ö–æ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ callback_query, –ø–æ–¥–∞–≤–ª—è—è –æ—à–∏–±–∫—É
    ¬´query is too old and response timeout expired¬ª.
    """
    try:
        await callback.answer(*cb_args, **cb_kwargs)
    except TelegramBadRequest:
        # –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π callback
        pass